syntax = "proto3";
package io.knitter;

import "name.proto";

enum ProjectStatus {
  ProjectCanceled = 0;
  ProjectRunning = 1;
  ProjectSuspended = 2;
  ProjectComplete = 3;
}

// 新项目
message NewProjectRequest{
  cashmere.Name name = 1;
  string inner_root_path = 2;
  string external_root_path = 3;
  bytes picture = 4;
  string description = 5;
}
message NewProjectResponse {
  // 成功返回项目id
  string result = 1;
}

// 标记项目已经完成
message ChangeProjectStatusRequest {
  string project_id = 1;
  ProjectStatus status = 2;
}
message ChangeProjectStatusResponse {
  ProjectStatus status = 1;
}

// 关联资产集合到项目
message AssociateAssetCollectionsToProjectRequest {
  string project_id = 1;
  repeated string collection_ids = 2;
}
message AssociateAssetCollectionsToProjectResponse {
  // "ok" if succeed
  string result = 1;
}

// 取消项目关联资产集合
message DeassociateAssetCollectionsFromProjectRequest {
  string project_id = 1;
  repeated string collection_ids = 2;
}
message DeassociateAssetCollectionsFromProjectResponse {
  // "ok" if succeed
  string result = 1;
}

// 关联布景集合到项目
message AssociateSetCollectionsToProjectRequest {
  string project_id = 1;
  repeated string collection_ids = 2;
}
message AssociateSetCollectionsToProjectResponse {
  // "ok" if succeed
  string result = 1;
}
// 取消关联项目布景集合
message DeassociateSetCollectionsFromProjectRequest {
  string project_id = 1;
  repeated string collection_ids = 2;
}
message DeassociateSetCollectionsFromProjectResponse {
  // "ok" if succeed
  string result = 1;
}

// 取得关联资产集表
message GetProjectAssociatedAssetCollectionsRequest {
  string project_id = 1;
  repeated string collection_ids = 2;
}
message GetProjectAssociatedAssetCollectionsResponse {
  repeated bytes asset_collections = 1;
}

// 取得项目景集合表
message GetProjectAssociatedSetCollectionsRequest {
  string project_id = 1;
  repeated string collection_ids = 2;
}
message GetProjectAssociatedSetCollectionsResponse {
  repeated bytes set_collections = 1;
}

// 取得项目集表
message GetProjectEpicsRequest {
  string project_id = 1;
}
message GetProjectEpicsResponse {
  repeated bytes epics = 1;
}
