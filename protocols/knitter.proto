/*
Author: 闫刚 (yes7rose@sina.com)
knitter.proto (c) 2021
Desc: knitter服务
Created:  2021-02-16T04:18:37.774Z
Modified: !date!
*/

syntax = "proto3";
package io.knitter;

import "manage.proto";
import "manage_schema.proto";
import "group.proto";
import "entity.proto";
import "name.proto";
import "data.proto";
import "file_data.proto";
import "area.proto";
import "language_code.proto";
import "country.proto";
import "view.proto";

import "tag_map.proto";
import "tag.proto";
import "question.proto";
import "answer.proto";
import "comment.proto";

import "project.proto";
import "asset_collection.proto";
import "asset.proto";
import "assembly.proto";
import "epic.proto";
import "sequence.proto";
import "cut.proto";
import "set_collection.proto";
import "set.proto";
import "specs.proto";
import "prefab.proto";

service KnitterGrpc{
  // 管理
  rpc GetManages(cashmere.GetManagesRequest) returns (cashmere.GetManagesResponse);
  rpc GetManageEntryCount(cashmere.GetManageEntryCountRequest) returns (cashmere.GetManageEntryCountResponse);
  rpc GetManageSchema(cashmere.GetManageSchemaRequest) returns (cashmere.GetManageSchemaResponse);
  rpc MarkSchemaFieldRemoved(cashmere.MarkSchemaFieldRemovedRequest) returns (cashmere.MarkSchemaFieldRemovedResponse);

  // 可见性权限
  rpc ChangeManageReadRule(cashmere.ChangeManageReadRuleRequest) returns (cashmere.ChangeManageReadRuleResponse);
  rpc ChangeManageWriteRule(cashmere.ChangeManageWriteRuleRequest) returns (cashmere.ChangeManageWriteRuleResponse);
  rpc ChangeCollectionReadRule(cashmere.ChangeCollectionReadRuleRequest) returns (cashmere.ChangeCollectionReadRuleResponse);
  rpc ChangeCollectionWriteRule(cashmere.ChangeCollectionWriteRuleRequest) returns (cashmere.ChangeCollectionWriteRuleResponse);
  rpc ChangeFieldReadRule(cashmere.ChangeFieldReadRuleRequest) returns (cashmere.ChangeFieldReadRuleResponse);
  rpc ChangeFieldWriteRule(cashmere.ChangeFieldWriteRuleRequest) returns (cashmere.ChangeFieldWriteRuleResponse);

  // 实体，主要是实体查询
  rpc GetEntity(cashmere.GetEntityRequest) returns (cashmere.GetEntityResponse);
  rpc GetEntities(cashmere.GetEntitiesRequest) returns (cashmere.GetEntitiesResponse);
  rpc GetEntitiesPage(cashmere.GetEntitiesPageRequest) returns (cashmere.GetEntitiesPageResponse);

  // 编辑实体属性，非数据结构
  rpc EditEntityField(cashmere.EditEntityFieldRequest) returns (cashmere.EditEntityFieldResponse);
  // 编辑实体属性，MAP数据结构
  rpc EditEntityMapField(cashmere.EditEntityMapFieldRequest) returns (cashmere.EditEntityMapFieldResponse);
  rpc EditEntityMapFieldRemoveKey(cashmere.EditEntityMapFieldRemoveKeyRequest) returns (cashmere.EditEntityMapFieldRemoveKeyResponse);
  // 编辑实体属性，List数据结构
  rpc EditEntityListFieldAddItems(cashmere.EditEntityListFieldAddItemsRequest) returns (cashmere.EditEntityListFieldAddItemsResponse);
  rpc EditEntityListFieldRemoveItems(cashmere.EditEntityListFieldRemoveItemsRequest) returns (cashmere.EditEntityListFieldRemoveItemsResponse);

  // 名字
  rpc Rename(cashmere.RenameRequest) returns (cashmere.RenameResponse);
  rpc NewLanguageName(cashmere.NewLanguageNameRequest) returns (cashmere.NewLanguageNameResponse);

  // 国家
  rpc NewCountry(cashmere.NewCountryRequest) returns (cashmere.NewCountryResponse);

  // 语言编码
  rpc NewLanguageCode(cashmere.NewLanguageCodeRequest) returns (cashmere.NewLanguageCodeResponse);
  rpc EditLanguageCode(cashmere.EditLanguageCodeRequest) returns (cashmere.EditLanguageCodeResponse);

  // 组
  rpc NewGroup (cashmere.NewGroupRequest) returns (cashmere.NewGroupResponse);

  // 数据
  rpc NewData(cashmere.NewDataRequest) returns (cashmere.NewDataResponse);
  rpc GetDataList(cashmere.GetDataListRequest) returns (cashmere.GetDataListResponse);
  rpc MarkDataRemoved(cashmere.MarkDataRemovedRequest) returns (cashmere.MarkDataRemovedResponse);
  rpc FileDataUploadFile(stream cashmere.FileDataUploadFileRequest) returns (stream cashmere.FileDataUploadFileResponse);

  // 项目
  rpc NewProject(NewProjectRequest) returns (NewProjectResponse);
  rpc AssociateAssetCollectionsToProject(AssociateAssetCollectionsToProjectRequest) returns (AssociateAssetCollectionsToProjectResponse);
  rpc GetProjectAssociatedAssetCollections(GetProjectAssociatedAssetCollectionsRequest) returns (GetProjectAssociatedAssetCollectionsResponse);
  rpc GetProjectAssociatedSets(GetProjectAssociatedSetsRequest) returns (GetProjectAssociatedSetsResponse);

  // 库
  rpc NewAssetCollection(NewAssetCollectionRequest) returns (NewAssetCollectionResponse);
  rpc GetAssetCollectionAssociatedAssetsPage(GetAssetCollectionAssetsPageRequest) returns (GetAssetCollectionAssetsPageResponse);
  rpc GetAssetCollectionAssociatedAssembliesPage(GetAssetCollectionAssembliesPageRequest) returns (GetAssetCollectionAssembliesPageResponse);

  // 资产
  rpc NewAsset(NewAssetRequest) returns (NewAssetResponse);
  rpc GetAssetSpecses(GetAssetSpecsesRequest) returns (GetAssetSpecsesResponse);
  rpc GetAssetPrefabs(GetAssetPrefabsRequest) returns (GetAssetPrefabsResponse);
  rpc ReferenceAssets(ReferenceAssetsRequest) returns (ReferenceAssetsResponse);
  rpc MartAssetSatus(MarkAssetStatusRequest) returns (MarkAssetStatusResponse);

  // 组合
  rpc NewAssembly(NewAssemblyRequest) returns (NewAssemblyResponse);
  rpc ReferenceAssemblies(ReferenceAssembliesRequest) returns (ReferenceAssembliesResponse);

  // 集
  rpc NewEpic(NewEpicRequest) returns (NewEpicResponse);
  rpc GetEpicSequences(GetEpicSequencesRequest) returns (GetEpicSequencesResponse);

  // 章节
  rpc NewSequence(NewSequenceRequest) returns (NewSequenceResponse);
  rpc GetSequenceCuts(GetSequenceCutsRequest) returns (GetSequenceCutsResponse);

  // 镜头
  rpc NewCut(NewCutRequest) returns (NewCutResponse);
  rpc GetCutReferencedAssets(GetCutReferencedAssetsRequest) returns (GetCutReferencedAssetsResponse);
  rpc MarkCutStatus(MarkCutStatusRequest) returns (MarkCutStatusResponse);

  // 景集合
  rpc NewSetCollection(NewSetCollectionRequest) returns (NewSetCollectionResponse);

  // 景
  rpc NewSet(NewSetRequest) returns (NewSetResponse);
  rpc ReferenceSets(ReferenceSetsRequest) returns (ReferenceSetsResponse);
  rpc MartSetSatus(MarkSetStatusRequest) returns (MarkSetStatusResponse);

  // 规格
  rpc NewSpecs(NewSpecsRequest) returns (NewSpecsResponse);

  // 预制件
  rpc NewPrefab(NewPrefabRequest) returns (NewPrefabResponse);

  // =====工作=====
  // 工作管理
  // rpc NewWork(cashmere.NewWorkRequest) returns (cashmere.NewWorkResponse);
  // rpc NewPhaseForWork(cashmere.NewPhaseForWorkRequest) returns (cashmere.NewPhaseForWorkResponse);
  // rpc NewWorkNodeForProcedureGraph(cashmere.NewWorkNodeForProcedureGraphRequest) returns (cashmere.NewWorkNodeForProcedureGraphResponse);

  // 指派工作
  // rpc AssignWorkNodeToWorker(cashmere.AssignWorkNodeToWorkerRequest) returns (cashmere.AssignWorkNodeToWorkerResponse);

  // 工作节点
  // rpc CreateWorkNodeLink(cashmere.CreateWorkNodeLinkRequest) returns (cashmere.CreateWorkNodeLinkResponse);
  // rpc RemoveWorkNodeLink(cashmere.RemoveWorkNodeLinkRequest) returns (cashmere.RemoveWorkNodeLinkResponse);

  // rpc NewDataSlotForWorkNode(cashmere.NewDataSlotForWorkNodeRequest) returns (cashmere.NewDataSlotForWorkNodeResponse);
  // rpc RemoveDependentDataForWorkNode(cashmere.BreakWorkNodeConnectionRequest) returns (cashmere.BreakWorkNodeConnectionResponse);
  // rpc NewRefrenceDataForWorkNode(cashmere.BreakWorkNodeConnectionRequest) returns (cashmere.BreakWorkNodeConnectionResponse);
  // rpc RemoveRefrenceDataForWorkNode(cashmere.BreakWorkNodeConnectionRequest) returns (cashmere.BreakWorkNodeConnectionResponse);
  // rpc NewWorkDataForWorkNode(cashmere.BreakWorkNodeConnectionRequest) returns (cashmere.BreakWorkNodeConnectionResponse);
  // rpc RemoveWorkDataForWorkNode(cashmere.BreakWorkNodeConnectionRequest) returns (cashmere.BreakWorkNodeConnectionResponse);
  // rpc NewOutDataForWorkNode(cashmere.BreakWorkNodeConnectionRequest) returns (cashmere.BreakWorkNodeConnectionResponse);
  // rpc RemoveOutDataForWorkNode(cashmere.BreakWorkNodeConnectionRequest) returns (cashmere.BreakWorkNodeConnectionResponse);

  // 新任务
  // rpc NewTaskForWorkNode(cashmere.NewTaskForWorkNodeRequest) returns (cashmere.NewTaskForWorkNodeResponse);
  // 标记任务状态
  // rpc MarkTaskStatus(cashmere.MarkTaskStatusRequest) returns (cashmere.MarkTaskStatusResponse);
  // 提交任务
  // rpc CommitTask(cashmere.CommitTaskRequest) returns (cashmere.CommitTaskResponse);

  // =====数据=====
  // rpc NewDataForTask(cashmere.NewDataForTaskRequest) returns (cashmere.NewDataForTaskResponse);
  // rpc AssociateDataToTask(cashmere.AssociateDataToTaskRequest) returns (cashmere.AssociateDataToTaskResponse);

  // 添加目标事件队列
  // rpc AddEventTargetQueue(cashmere.AddEventTargetQueueRequest) returns (cashmere.AddEventTargetQueueResponse);

  // 触发事件，客户端->服务端
  // rpc EmitEvent(cashmere.EmitEventRequest) returns (cashmere.EmitEventResponse);

  // 连接事件队列
  // rpc LinkEventQueue(cashmere.LinkEventQueueRequest) returns (cashmere.LinkEventQueueResponse);
}
