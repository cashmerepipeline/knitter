/*
Author: 闫刚 (yes7rose@sina.com)
knitter.proto (c) 2021
Desc: knitter服务
Created:  2021-02-16T04:18:37.774Z
Modified: !date!
*/

syntax = "proto3";
package io.knitter;

import "name.proto";

import "manage.proto";
import "manage_schema.proto";
import "group.proto";
import "entity.proto";

import "data.proto";
import "data_server.proto";
import "specs.proto";
import "stage.proto";
import "version.proto";
import "prefab.proto";
import "file_transfer.proto";

import "area.proto";
import "country_code.proto";
import "language_code.proto";
import "view.proto";

import "tag_map.proto";
import "tag.proto";
import "comment.proto";

import "event.proto";
import "event_server.proto";

import "project.proto";
import "asset_collection.proto";
import "asset.proto";
import "assembly.proto";
import "epic.proto";
import "sequence.proto";
import "cut.proto";
import "set_collection.proto";
import "set.proto";
import "reference.proto";

service KnitterGrpc{
  // 管理
  rpc GetManages(cashmere.GetManagesRequest) returns (cashmere.GetManagesResponse);
  rpc GetManageEntryCount(cashmere.GetManageEntryCountRequest) returns (cashmere.GetManageEntryCountResponse);
  rpc GetManageSchema(cashmere.GetManageSchemaRequest) returns (cashmere.GetManageSchemaResponse);
  rpc MarkSchemaFieldRemoved(cashmere.MarkSchemaFieldRemovedRequest) returns (cashmere.MarkSchemaFieldRemovedResponse);

  // 可见性权限
  rpc ChangeManageReadRule(cashmere.ChangeManageReadRuleRequest) returns (cashmere.ChangeManageReadRuleResponse);
  rpc ChangeManageWriteRule(cashmere.ChangeManageWriteRuleRequest) returns (cashmere.ChangeManageWriteRuleResponse);
  rpc ChangeCollectionReadRule(cashmere.ChangeCollectionReadRuleRequest) returns (cashmere.ChangeCollectionReadRuleResponse);
  rpc ChangeCollectionWriteRule(cashmere.ChangeCollectionWriteRuleRequest) returns (cashmere.ChangeCollectionWriteRuleResponse);
  rpc ChangeFieldReadRule(cashmere.ChangeFieldReadRuleRequest) returns (cashmere.ChangeFieldReadRuleResponse);
  rpc ChangeFieldWriteRule(cashmere.ChangeFieldWriteRuleRequest) returns (cashmere.ChangeFieldWriteRuleResponse);

  // 实体，主要是实体查询
  rpc GetEntity(cashmere.GetEntityRequest) returns (cashmere.GetEntityResponse);
  rpc GetEntities(cashmere.GetEntitiesRequest) returns (cashmere.GetEntitiesResponse);
  rpc GetEntitiesPage(cashmere.GetEntitiesPageRequest) returns (cashmere.GetEntitiesPageResponse);
  rpc MarkEntityRemoved(cashmere.MarkEntityRemovedRequest) returns (cashmere.MarkEntityRemovedResponse);
  rpc RecoverRemovedEntity(cashmere.RecoverRemovedEntityRequest) returns (cashmere.RecoverRemovedEntityResponse);
  rpc GetRemovedEntitiesPage(cashmere.GetRemovedEntitiesPageRequest) returns (cashmere.GetRemovedEntitiesPageResponse);

  // 通用编辑实体属性，非数据结构
  rpc EditEntityField(cashmere.EditEntityFieldRequest) returns (cashmere.EditEntityFieldResponse);
  // 通用编辑实体属性，MAP数据结构
  rpc EditEntityMapField(cashmere.EditEntityMapFieldRequest) returns (cashmere.EditEntityMapFieldResponse);
  rpc EditEntityMapFieldRemoveKey(cashmere.EditEntityMapFieldRemoveKeyRequest) returns (cashmere.EditEntityMapFieldRemoveKeyResponse);
  // 通用编辑实体属性，List数据结构
  rpc EditEntityArrayFieldAddItems(cashmere.EditEntityArrayFieldAddItemsRequest) returns (cashmere.EditEntityArrayFieldAddItemsResponse);
  rpc EditEntityArrayFieldRemoveItems(cashmere.EditEntityArrayFieldRemoveItemsRequest) returns (cashmere.EditEntityArrayFieldRemoveItemsResponse);

  // 名字
  rpc Rename(cashmere.RenameRequest) returns (cashmere.RenameResponse);
  rpc NewLanguageName(cashmere.NewLanguageNameRequest) returns (cashmere.NewLanguageNameResponse);

  // 国家
  rpc NewCountryCode(cashmere.NewCountryCodeRequest) returns (cashmere.NewCountryCodeResponse);

  // 语言编码
  rpc NewLanguageCode(cashmere.NewLanguageCodeRequest) returns (cashmere.NewLanguageCodeResponse);

  // 组
  rpc NewGroup (cashmere.NewGroupRequest) returns (cashmere.NewGroupResponse);

  // 数据
  rpc GetDataServerConfigs(.data.cashmere.GetDataServerConfigsRequest) returns (.data.cashmere.GetDataServerConfigsResponse);
  rpc NewData(.data.cashmere.NewDataRequest) returns (.data.cashmere.NewDataResponse);
  rpc ListEntityData(.data.cashmere.ListEntityDataRequest) returns (.data.cashmere.ListEntityDataResponse);
  rpc GetDataInfo(.data.cashmere.GetDataInfoRequest) returns (.data.cashmere.GetDataInfoResponse);
  rpc MarkDataRemoved(.data.cashmere.MarkDataRemovedRequest) returns (.data.cashmere.MarkDataRemovedResponse);
  
  // 规格
  rpc NewSpecs(.data.cashmere.NewSpecsRequest) returns (.data.cashmere.NewSpecsResponse);
  rpc ListSpecs(.data.cashmere.ListSpecsRequest) returns (.data.cashmere.ListSpecsResponse);
  rpc ListSpecsPrefabs(.data.cashmere.ListSpecsPrefabsRequest) returns (.data.cashmere.ListSpecsPrefabsResponse);

  // 数据阶段
  rpc NewStage(.data.cashmere.NewStageRequest) returns (.data.cashmere.NewStageResponse);
  rpc ListStages(.data.cashmere.ListStagesRequest) returns (.data.cashmere.ListStagesResponse);

  // 预制件
  rpc NewPrefab(.data.cashmere.NewPrefabRequest) returns (.data.cashmere.NewPrefabResponse);

  // 阶段版本
  rpc AddStageVersion(.data.cashmere.AddStageVersionRequest) returns (.data.cashmere.AddStageVersionResponse);
  rpc ListStageVersions(.data.cashmere.ListStageVersionsRequest) returns (.data.cashmere.ListStageVersionsResponse);
  rpc SetStageCurrentVersion(.data.cashmere.SetStageCurrentVersionRequest) returns (.data.cashmere.SetStageCurrentVersionResponse);
  rpc RemoveStageVersion(.data.cashmere.RemoveStageVersionRequest) returns (.data.cashmere.RemoveStageVersionResponse);

  // 文件操作
  rpc AddFileToVersion(.data.cashmere.AddFileToVersionRequest) returns (.data.cashmere.AddFileToVersionResponse);
  rpc AddFileSetToVersion(.data.cashmere.AddFileSetToVersionRequest) returns (.data.cashmere.AddFileSetToVersionResponse);
  rpc AddFileSequenceToVersion(.data.cashmere.AddFileSequenceToVersionRequest) returns (.data.cashmere.AddFileSequenceToVersionResponse);
  // 只对文件和文件集有效，文件序列不支持
  rpc RemoveFilesFromVersion(.data.cashmere.RemoveFilesFromVersionRequest) returns (.data.cashmere.RemoveFilesFromVersionResponse);

  rpc ListVersionFolder(.data.cashmere.ListVersionFolderRequest) returns (.data.cashmere.ListVersionFolderResponse);
  // 手动删除版本文件夹下的无关文件或文件夹
  rpc DeleteVersionFolderEntries(.data.cashmere.DeleteVersionFolderEntriesRequest) returns (.data.cashmere.DeleteVersionFolderEntriesResponse);
  
  rpc UploadFile(stream .data.cashmere.UploadFileRequest) returns (stream .data.cashmere.UploadFileResponse);
  rpc DownloadFile(stream .data.cashmere.DownloadFileRequest) returns (stream .data.cashmere.DownloadFileResponse);
  
  // 事件
  rpc RegisterEventType(.event.cashmere.RegisterEventTypeRequest) returns (.event.cashmere.RegisterEventTypeResponse);
  // rpc DeregisterEventType(.event.cashmere.DeregisterEventTypeRequest) returns (.event.cashmere.DeregisterEventTypeResponse);
  rpc RegisterEventEmitter(.event.cashmere.RegisterEventEmitterRequest) returns (.event.cashmere.RegisterEventEmitterResponse);
  rpc RegisterEventListener(.event.cashmere.RegisterEventListenerRequest) returns (.event.cashmere.RegisterEventListenerResponse);
  rpc EmitEvent(.event.cashmere.EmitEventRequest) returns (stream .event.cashmere.EmitEventResponse);
  rpc ListenEventType(.event.cashmere.ListenEventTypeRequest) returns (stream .event.cashmere.ListenEventTypeResponse);

  // 项目
  rpc NewProject(knitter_module.NewProjectRequest) returns (knitter_module.NewProjectResponse);
  rpc AssociateAssetCollectionsToProject(knitter_module.AssociateAssetCollectionsToProjectRequest) returns (knitter_module.AssociateAssetCollectionsToProjectResponse);
  rpc DeassociateAssetCollectionsFromProject(knitter_module.DeassociateAssetCollectionsFromProjectRequest) returns (knitter_module.DeassociateAssetCollectionsFromProjectResponse);
  rpc AssociateSetCollectionsToProject(knitter_module.AssociateSetCollectionsToProjectRequest) returns (knitter_module.AssociateSetCollectionsToProjectResponse);
  rpc DeassociateSetCollectionsFromProject(knitter_module.DeassociateSetCollectionsFromProjectRequest) returns (knitter_module.DeassociateSetCollectionsFromProjectResponse);
  rpc GetProjectAssociatedAssetCollections(knitter_module.GetProjectAssociatedAssetCollectionsRequest) returns (knitter_module.GetProjectAssociatedAssetCollectionsResponse);
  rpc GetProjectAssociatedSetCollections(knitter_module.GetProjectAssociatedSetCollectionsRequest) returns (knitter_module.GetProjectAssociatedSetCollectionsResponse);
  rpc ChangeProjectStatus(knitter_module.ChangeProjectStatusRequest) returns (knitter_module.ChangeProjectStatusResponse);

  // 资产集 
  rpc NewAssetCollection(knitter_module.NewAssetCollectionRequest) returns (knitter_module.NewAssetCollectionResponse);
  rpc GetAssetCollectionAssetTotalCount(knitter_module.GetAssetCollectionAssetTotalCountRequest) returns (knitter_module.GetAssetCollectionAssetTotalCountResponse);
  rpc GetAssetCollectionAssemblyTotalCount(knitter_module.GetAssetCollectionAssemblyTotalCountRequest) returns (knitter_module.GetAssetCollectionAssemblyTotalCountResponse);
  rpc GetAssetCollectionAssetsPage(knitter_module.GetAssetCollectionAssetsPageRequest) returns (knitter_module.GetAssetCollectionAssetsPageResponse);
  rpc GetAssetCollectionAssembliesPage(knitter_module.GetAssetCollectionAssembliesPageRequest) returns (knitter_module.GetAssetCollectionAssembliesPageResponse);
  // rpc MarkAssetCollectionStatus(MarkAssetCollectionStatusRequest) returns (MarkAssetCollectionStatusResponse);

  // 资产
  rpc NewAsset(knitter_module.NewAssetRequest) returns (knitter_module.NewAssetResponse);
  rpc GetReferencedAssets(knitter_module.GetReferencedAssetsRequest) returns (knitter_module.GetReferencedAssetsResponse);
  rpc MarkAssetStatus(knitter_module.MarkAssetStatusRequest) returns (knitter_module.MarkAssetStatusResponse);

  // 组合
  rpc NewAssembly(knitter_module.NewAssemblyRequest) returns (knitter_module.NewAssemblyResponse);

  // 集
  rpc NewEpic(knitter_module.NewEpicRequest) returns (knitter_module.NewEpicResponse);
  rpc GetEpicSequences(knitter_module.GetEpicSequencesRequest) returns (knitter_module.GetEpicSequencesResponse);

  // 章节
  rpc NewSequence(knitter_module.NewSequenceRequest) returns (knitter_module.NewSequenceResponse);
  rpc GetSequenceCuts(knitter_module.GetSequenceCutsRequest) returns (knitter_module.GetSequenceCutsResponse);

  // 镜头
  rpc NewCut(knitter_module.NewCutRequest) returns (knitter_module.NewCutResponse);
  rpc GetCutReferencedAssets(knitter_module.GetCutReferencedAssetsRequest) returns (knitter_module.GetCutReferencedAssetsResponse);
  rpc MarkCutStatus(knitter_module.MarkCutStatusRequest) returns (knitter_module.MarkCutStatusResponse);

  // 景集合
  rpc NewSetCollection(knitter_module.NewSetCollectionRequest) returns (knitter_module.NewSetCollectionResponse);
  rpc GetSetCollectionSetsPage(knitter_module.GetSetCollectionSetsPageRequest) returns (knitter_module.GetSetCollectionSetsPageResponse);
  rpc GetSetCollectionSetTotalCount(knitter_module.GetSetCollectionSetTotalCountRequest) returns (knitter_module.GetSetCollectionSetTotalCountResponse);

  // 景
  rpc NewSet(knitter_module.NewSetRequest) returns (knitter_module.NewSetResponse);
  rpc MarkSetSatus(knitter_module.MarkSetStatusRequest) returns (knitter_module.MarkSetStatusResponse);


  // 引用
  rpc AddReferences(knitter_module.AddReferencesRequest) returns (knitter_module.AddReferencesResponse);
  rpc RemoveReferences(knitter_module.RemoveReferencesRequest) returns (knitter_module.RemoveReferencesResponse);
  rpc ListReferences(knitter_module.ListReferencesRequest) returns (knitter_module.ListReferencesResponse);
  rpc ChangeReference(knitter_module.ChangeReferencePrefabRequest) returns (knitter_module.ChangeReferencePrefabResponse);

  // =====工作=====
  // 工作管理
  // rpc NewWork(cashmere.NewWorkRequest) returns (cashmere.NewWorkResponse);
  // rpc NewPhaseForWork(cashmere.NewPhaseForWorkRequest) returns (cashmere.NewPhaseForWorkResponse);
  // rpc NewWorkNodeForProcedureGraph(cashmere.NewWorkNodeForProcedureGraphRequest) returns (cashmere.NewWorkNodeForProcedureGraphResponse);

  // 指派工作
  // rpc AssignWorkNodeToWorker(cashmere.AssignWorkNodeToWorkerRequest) returns (cashmere.AssignWorkNodeToWorkerResponse);

  // 工作节点
  // rpc CreateWorkNodeLink(cashmere.CreateWorkNodeLinkRequest) returns (cashmere.CreateWorkNodeLinkResponse);
  // rpc RemoveWorkNodeLink(cashmere.RemoveWorkNodeLinkRequest) returns (cashmere.RemoveWorkNodeLinkResponse);

  // rpc NewDataSlotForWorkNode(cashmere.NewDataSlotForWorkNodeRequest) returns (cashmere.NewDataSlotForWorkNodeResponse);
  // rpc RemoveDependentDataForWorkNode(cashmere.BreakWorkNodeConnectionRequest) returns (cashmere.BreakWorkNodeConnectionResponse);
  // rpc NewRefrenceDataForWorkNode(cashmere.BreakWorkNodeConnectionRequest) returns (cashmere.BreakWorkNodeConnectionResponse);
  // rpc RemoveRefrenceDataForWorkNode(cashmere.BreakWorkNodeConnectionRequest) returns (cashmere.BreakWorkNodeConnectionResponse);
  // rpc NewWorkDataForWorkNode(cashmere.BreakWorkNodeConnectionRequest) returns (cashmere.BreakWorkNodeConnectionResponse);
  // rpc RemoveWorkDataForWorkNode(cashmere.BreakWorkNodeConnectionRequest) returns (cashmere.BreakWorkNodeConnectionResponse);
  // rpc NewOutDataForWorkNode(cashmere.BreakWorkNodeConnectionRequest) returns (cashmere.BreakWorkNodeConnectionResponse);
  // rpc RemoveOutDataForWorkNode(cashmere.BreakWorkNodeConnectionRequest) returns (cashmere.BreakWorkNodeConnectionResponse);

  // 新任务
  // rpc NewTaskForWorkNode(cashmere.NewTaskForWorkNodeRequest) returns (cashmere.NewTaskForWorkNodeResponse);
  // 标记任务状态
  // rpc MarkTaskStatus(cashmere.MarkTaskStatusRequest) returns (cashmere.MarkTaskStatusResponse);
  // 提交任务
  // rpc CommitTask(cashmere.CommitTaskRequest) returns (cashmere.CommitTaskResponse);

  // =====数据=====
  // rpc NewDataForTask(cashmere.NewDataForTaskRequest) returns (cashmere.NewDataForTaskResponse);
  // rpc AssociateDataToTask(cashmere.AssociateDataToTaskRequest) returns (cashmere.AssociateDataToTaskResponse);

  // 添加目标事件队列
  // rpc AddEventTargetQueue(cashmere.AddEventTargetQueueRequest) returns (cashmere.AddEventTargetQueueResponse);

  // 触发事件，客户端->服务端
  // rpc EmitEvent(cashmere.EmitEventRequest) returns (cashmere.EmitEventResponse);

  // 连接事件队列
  // rpc LinkEventQueue(cashmere.LinkEventQueueRequest) returns (cashmere.LinkEventQueueResponse);
}
